|UART
CLOCK_50 => baud_gen:baud_rate_gen.clk_in
KEY[0] => baud_gen:baud_rate_gen.reset
KEY[0] => transmitter:transmitter_1.reset
KEY[0] => receiver:receiver_1.reset
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
SW[0] => transmitter:transmitter_1.data_packet[0]
SW[1] => transmitter:transmitter_1.data_packet[1]
SW[2] => transmitter:transmitter_1.data_packet[2]
SW[3] => transmitter:transmitter_1.data_packet[3]
SW[4] => transmitter:transmitter_1.data_packet[4]
SW[5] => transmitter:transmitter_1.data_packet[5]
SW[6] => transmitter:transmitter_1.data_packet[6]
SW[7] => transmitter:transmitter_1.data_packet[7]
LEDR[0] <= receiver:receiver_1.receiver_out[0]
LEDR[1] <= receiver:receiver_1.receiver_out[1]
LEDR[2] <= receiver:receiver_1.receiver_out[2]
LEDR[3] <= receiver:receiver_1.receiver_out[3]
LEDR[4] <= receiver:receiver_1.receiver_out[4]
LEDR[5] <= receiver:receiver_1.receiver_out[5]
LEDR[6] <= receiver:receiver_1.receiver_out[6]
LEDR[7] <= receiver:receiver_1.receiver_out[7]
LEDR[8] <= <GND>
LEDR[9] <= <GND>
LEDR[10] <= <GND>
LEDR[11] <= <GND>
LEDR[12] <= <GND>
LEDR[13] <= <GND>
LEDR[14] <= <GND>
LEDR[15] <= <GND>
LEDR[16] <= <GND>
LEDR[17] <= <GND>


|UART|baud_gen:baud_rate_gen
clk_in => baud_out~reg0.CLK
clk_in => count[0].CLK
clk_in => count[1].CLK
clk_in => count[2].CLK
clk_in => count[3].CLK
clk_in => count[4].CLK
clk_in => count[5].CLK
clk_in => count[6].CLK
clk_in => count[7].CLK
clk_in => count[8].CLK
clk_in => count[9].CLK
clk_in => count[10].CLK
clk_in => count[11].CLK
clk_in => count[12].CLK
clk_in => count[13].CLK
clk_in => count[14].CLK
clk_in => count[15].CLK
clk_in => count[16].CLK
clk_in => count[17].CLK
clk_in => count[18].CLK
clk_in => count[19].CLK
clk_in => count[20].CLK
clk_in => count[21].CLK
clk_in => count[22].CLK
clk_in => count[23].CLK
clk_in => count[24].CLK
clk_in => count[25].CLK
clk_in => count[26].CLK
clk_in => count[27].CLK
clk_in => count[28].CLK
clk_in => count[29].CLK
clk_in => count[30].CLK
clk_in => count[31].CLK
reset => baud_out~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
baud_out <= baud_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|transmitter:transmitter_1
RTS => CTS.OUTPUTSELECT
RTS => current_state.DATAB
RTS => current_state.DATAB
clk_baud => CTS~reg0.CLK
clk_baud => TX_OUT~reg0.CLK
clk_baud => even_cnt[0].CLK
clk_baud => even_cnt[1].CLK
clk_baud => even_cnt[2].CLK
clk_baud => even_cnt[3].CLK
clk_baud => even_cnt[4].CLK
clk_baud => even_cnt[5].CLK
clk_baud => even_cnt[6].CLK
clk_baud => even_cnt[7].CLK
clk_baud => even_cnt[8].CLK
clk_baud => even_cnt[9].CLK
clk_baud => even_cnt[10].CLK
clk_baud => even_cnt[11].CLK
clk_baud => even_cnt[12].CLK
clk_baud => even_cnt[13].CLK
clk_baud => even_cnt[14].CLK
clk_baud => even_cnt[15].CLK
clk_baud => even_cnt[16].CLK
clk_baud => even_cnt[17].CLK
clk_baud => even_cnt[18].CLK
clk_baud => even_cnt[19].CLK
clk_baud => even_cnt[20].CLK
clk_baud => even_cnt[21].CLK
clk_baud => even_cnt[22].CLK
clk_baud => even_cnt[23].CLK
clk_baud => even_cnt[24].CLK
clk_baud => even_cnt[25].CLK
clk_baud => even_cnt[26].CLK
clk_baud => even_cnt[27].CLK
clk_baud => even_cnt[28].CLK
clk_baud => even_cnt[29].CLK
clk_baud => even_cnt[30].CLK
clk_baud => even_cnt[31].CLK
clk_baud => counter[0].CLK
clk_baud => counter[1].CLK
clk_baud => counter[2].CLK
clk_baud => counter[3].CLK
clk_baud => counter[4].CLK
clk_baud => counter[5].CLK
clk_baud => counter[6].CLK
clk_baud => counter[7].CLK
clk_baud => counter[8].CLK
clk_baud => counter[9].CLK
clk_baud => counter[10].CLK
clk_baud => counter[11].CLK
clk_baud => counter[12].CLK
clk_baud => counter[13].CLK
clk_baud => counter[14].CLK
clk_baud => counter[15].CLK
clk_baud => counter[16].CLK
clk_baud => counter[17].CLK
clk_baud => counter[18].CLK
clk_baud => counter[19].CLK
clk_baud => counter[20].CLK
clk_baud => counter[21].CLK
clk_baud => counter[22].CLK
clk_baud => counter[23].CLK
clk_baud => counter[24].CLK
clk_baud => counter[25].CLK
clk_baud => counter[26].CLK
clk_baud => counter[27].CLK
clk_baud => counter[28].CLK
clk_baud => counter[29].CLK
clk_baud => counter[30].CLK
clk_baud => counter[31].CLK
clk_baud => current_state~1.DATAIN
reset => CTS~reg0.ACLR
reset => TX_OUT~reg0.PRESET
reset => even_cnt[0].ACLR
reset => even_cnt[1].ACLR
reset => even_cnt[2].ACLR
reset => even_cnt[3].ACLR
reset => even_cnt[4].ACLR
reset => even_cnt[5].ACLR
reset => even_cnt[6].ACLR
reset => even_cnt[7].ACLR
reset => even_cnt[8].ACLR
reset => even_cnt[9].ACLR
reset => even_cnt[10].ACLR
reset => even_cnt[11].ACLR
reset => even_cnt[12].ACLR
reset => even_cnt[13].ACLR
reset => even_cnt[14].ACLR
reset => even_cnt[15].ACLR
reset => even_cnt[16].ACLR
reset => even_cnt[17].ACLR
reset => even_cnt[18].ACLR
reset => even_cnt[19].ACLR
reset => even_cnt[20].ACLR
reset => even_cnt[21].ACLR
reset => even_cnt[22].ACLR
reset => even_cnt[23].ACLR
reset => even_cnt[24].ACLR
reset => even_cnt[25].ACLR
reset => even_cnt[26].ACLR
reset => even_cnt[27].ACLR
reset => even_cnt[28].ACLR
reset => even_cnt[29].ACLR
reset => even_cnt[30].ACLR
reset => even_cnt[31].ACLR
reset => counter[0].PRESET
reset => counter[1].PRESET
reset => counter[2].PRESET
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => counter[16].ACLR
reset => counter[17].ACLR
reset => counter[18].ACLR
reset => counter[19].ACLR
reset => counter[20].ACLR
reset => counter[21].ACLR
reset => counter[22].ACLR
reset => counter[23].ACLR
reset => counter[24].ACLR
reset => counter[25].ACLR
reset => counter[26].ACLR
reset => counter[27].ACLR
reset => counter[28].ACLR
reset => counter[29].ACLR
reset => counter[30].ACLR
reset => counter[31].ACLR
reset => current_state~3.DATAIN
data_packet[0] => Mux0.IN7
data_packet[1] => Mux0.IN6
data_packet[2] => Mux0.IN5
data_packet[3] => Mux0.IN4
data_packet[4] => Mux0.IN3
data_packet[5] => Mux0.IN2
data_packet[6] => Mux0.IN1
data_packet[7] => Mux0.IN0
CTS <= CTS~reg0.DB_MAX_OUTPUT_PORT_TYPE
TX_OUT <= TX_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|receiver:receiver_1
CTS => Selector1.IN2
CTS => current_state.DATAB
clk_baud => complete_flag~reg0.CLK
clk_baud => error_flag~reg0.CLK
clk_baud => RTS~reg0.CLK
clk_baud => out_buffer[0].CLK
clk_baud => out_buffer[1].CLK
clk_baud => out_buffer[2].CLK
clk_baud => out_buffer[3].CLK
clk_baud => out_buffer[4].CLK
clk_baud => out_buffer[5].CLK
clk_baud => out_buffer[6].CLK
clk_baud => out_buffer[7].CLK
clk_baud => even_cnt[0].CLK
clk_baud => even_cnt[1].CLK
clk_baud => even_cnt[2].CLK
clk_baud => even_cnt[3].CLK
clk_baud => even_cnt[4].CLK
clk_baud => even_cnt[5].CLK
clk_baud => even_cnt[6].CLK
clk_baud => even_cnt[7].CLK
clk_baud => even_cnt[8].CLK
clk_baud => even_cnt[9].CLK
clk_baud => even_cnt[10].CLK
clk_baud => even_cnt[11].CLK
clk_baud => even_cnt[12].CLK
clk_baud => even_cnt[13].CLK
clk_baud => even_cnt[14].CLK
clk_baud => even_cnt[15].CLK
clk_baud => even_cnt[16].CLK
clk_baud => even_cnt[17].CLK
clk_baud => even_cnt[18].CLK
clk_baud => even_cnt[19].CLK
clk_baud => even_cnt[20].CLK
clk_baud => even_cnt[21].CLK
clk_baud => even_cnt[22].CLK
clk_baud => even_cnt[23].CLK
clk_baud => even_cnt[24].CLK
clk_baud => even_cnt[25].CLK
clk_baud => even_cnt[26].CLK
clk_baud => even_cnt[27].CLK
clk_baud => even_cnt[28].CLK
clk_baud => even_cnt[29].CLK
clk_baud => even_cnt[30].CLK
clk_baud => even_cnt[31].CLK
clk_baud => counter[0].CLK
clk_baud => counter[1].CLK
clk_baud => counter[2].CLK
clk_baud => counter[3].CLK
clk_baud => counter[4].CLK
clk_baud => counter[5].CLK
clk_baud => counter[6].CLK
clk_baud => counter[7].CLK
clk_baud => counter[8].CLK
clk_baud => counter[9].CLK
clk_baud => counter[10].CLK
clk_baud => counter[11].CLK
clk_baud => counter[12].CLK
clk_baud => counter[13].CLK
clk_baud => counter[14].CLK
clk_baud => counter[15].CLK
clk_baud => counter[16].CLK
clk_baud => counter[17].CLK
clk_baud => counter[18].CLK
clk_baud => counter[19].CLK
clk_baud => counter[20].CLK
clk_baud => counter[21].CLK
clk_baud => counter[22].CLK
clk_baud => counter[23].CLK
clk_baud => counter[24].CLK
clk_baud => counter[25].CLK
clk_baud => counter[26].CLK
clk_baud => counter[27].CLK
clk_baud => counter[28].CLK
clk_baud => counter[29].CLK
clk_baud => counter[30].CLK
clk_baud => counter[31].CLK
clk_baud => current_state~1.DATAIN
reset => RTS~reg0.PRESET
reset => even_cnt[0].ACLR
reset => even_cnt[1].ACLR
reset => even_cnt[2].ACLR
reset => even_cnt[3].ACLR
reset => even_cnt[4].ACLR
reset => even_cnt[5].ACLR
reset => even_cnt[6].ACLR
reset => even_cnt[7].ACLR
reset => even_cnt[8].ACLR
reset => even_cnt[9].ACLR
reset => even_cnt[10].ACLR
reset => even_cnt[11].ACLR
reset => even_cnt[12].ACLR
reset => even_cnt[13].ACLR
reset => even_cnt[14].ACLR
reset => even_cnt[15].ACLR
reset => even_cnt[16].ACLR
reset => even_cnt[17].ACLR
reset => even_cnt[18].ACLR
reset => even_cnt[19].ACLR
reset => even_cnt[20].ACLR
reset => even_cnt[21].ACLR
reset => even_cnt[22].ACLR
reset => even_cnt[23].ACLR
reset => even_cnt[24].ACLR
reset => even_cnt[25].ACLR
reset => even_cnt[26].ACLR
reset => even_cnt[27].ACLR
reset => even_cnt[28].ACLR
reset => even_cnt[29].ACLR
reset => even_cnt[30].ACLR
reset => even_cnt[31].ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => counter[16].ACLR
reset => counter[17].ACLR
reset => counter[18].ACLR
reset => counter[19].ACLR
reset => counter[20].ACLR
reset => counter[21].ACLR
reset => counter[22].ACLR
reset => counter[23].ACLR
reset => counter[24].ACLR
reset => counter[25].ACLR
reset => counter[26].ACLR
reset => counter[27].ACLR
reset => counter[28].ACLR
reset => counter[29].ACLR
reset => counter[30].ACLR
reset => counter[31].ACLR
reset => current_state~3.DATAIN
reset => out_buffer[7].ENA
reset => out_buffer[6].ENA
reset => out_buffer[5].ENA
reset => out_buffer[4].ENA
reset => out_buffer[3].ENA
reset => out_buffer[2].ENA
reset => out_buffer[1].ENA
reset => complete_flag~reg0.ENA
reset => out_buffer[0].ENA
reset => error_flag~reg0.ENA
TX_data_bit => Add0.IN8
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => even_cnt.OUTPUTSELECT
TX_data_bit => Selector1.IN3
TX_data_bit => error_flag.DATAB
TX_data_bit => out_buffer.OUTPUTSELECT
TX_data_bit => out_buffer.OUTPUTSELECT
TX_data_bit => out_buffer.OUTPUTSELECT
TX_data_bit => out_buffer.OUTPUTSELECT
TX_data_bit => out_buffer.OUTPUTSELECT
TX_data_bit => out_buffer.OUTPUTSELECT
TX_data_bit => out_buffer.OUTPUTSELECT
TX_data_bit => out_buffer.OUTPUTSELECT
TX_data_bit => Selector2.IN1
TX_data_bit => error_flag.DATAA
error_flag <= error_flag~reg0.DB_MAX_OUTPUT_PORT_TYPE
complete_flag <= complete_flag~reg0.DB_MAX_OUTPUT_PORT_TYPE
RTS <= RTS~reg0.DB_MAX_OUTPUT_PORT_TYPE
receiver_out[0] <= out_buffer[0].DB_MAX_OUTPUT_PORT_TYPE
receiver_out[1] <= out_buffer[1].DB_MAX_OUTPUT_PORT_TYPE
receiver_out[2] <= out_buffer[2].DB_MAX_OUTPUT_PORT_TYPE
receiver_out[3] <= out_buffer[3].DB_MAX_OUTPUT_PORT_TYPE
receiver_out[4] <= out_buffer[4].DB_MAX_OUTPUT_PORT_TYPE
receiver_out[5] <= out_buffer[5].DB_MAX_OUTPUT_PORT_TYPE
receiver_out[6] <= out_buffer[6].DB_MAX_OUTPUT_PORT_TYPE
receiver_out[7] <= out_buffer[7].DB_MAX_OUTPUT_PORT_TYPE


